name: Python application with Allure Reports

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-playwright allure-pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Install Allure via APT repository
      run: |
        # Add Allure's official GPG key and repository
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jre
        sudo apt-get install -y curl
        curl -sL https://github.com/allure-framework/allure2/releases/latest/download/allure-linux-x64 -o /usr/local/bin/allure
        chmod +x /usr/local/bin/allure

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run tests with pytest and collect Allure results
      run: |
        pytest --headless --alluredir=artifacts/allure-results

    - name: Generate Allure report
      run: |
        allure generate artifacts/allure-results -o artifacts/allure-report --clean

    - name: Upload Allure Report as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: allure-report
        path: artifacts/allure-report
